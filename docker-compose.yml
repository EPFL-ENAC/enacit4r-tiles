version: '3'

services:
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./cache:/var/cache/nginx
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - martin
    labels:
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.rule=PathPrefix(`/`)"
      - "traefik.enable=true"
  reverse-proxy:
    image: traefik:v2.10
    restart: unless-stopped
    command:
      - "--providers.docker"
      - "--providers.file.directory=/configuration/"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yaml:/configuration/traefik.yml
      - ${SSL_CERT_KEY:-./cert/certificate.key}:/cert/certificate.key
      - ${SSL_CERT_CRT:-./cert/certificate.crt}:/cert/certificate.crt
    ports:
      - "80:80"
      - "443:443"

  martin:
    image: ghcr.io/maplibre/martin:v0.8.7
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_DB:-db}:${POSTGRES_PASSWORD:-password}@db/${POSTGRES_DB:-db}
    depends_on:
      - db

  db:
    image: postgis/postgis:14-3.3-alpine
    restart: unless-stopped
    ports:
      - "25432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - ./pg_data:/var/lib/postgresql/data
